{"version":3,"sources":["text-input.js","tooltip.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["(() => {\n    const ACTIVE_CLASS = 'active';\n\n    const nodes = document.querySelectorAll('.js-text-input-node');\n\n    nodes.forEach((node) => {\n        const input = node.querySelector('.js-text-input');\n        const reset = node.querySelector('.js-text-input-reset');\n        const alert = node.querySelector('.js-text-input-alert');\n\n        if (input.value !== '') {\n            reset?.classList.add(ACTIVE_CLASS);\n        }\n\n        input?.addEventListener('blur', (event) => {\n            if (event.target.value === '') {\n                alert?.classList.add(ACTIVE_CLASS);\n            } else {\n                alert?.classList.remove(ACTIVE_CLASS);\n            }\n        });\n\n        input?.addEventListener('input', (event) => {\n            if (event.target.value === '') {\n                reset?.classList.remove(ACTIVE_CLASS);\n            } else {\n                reset?.classList.add(ACTIVE_CLASS);\n                alert?.classList.remove(ACTIVE_CLASS);\n            }\n        });\n\n        reset?.addEventListener('click', () => {\n            if (input) {\n                input.value = '';\n                reset?.classList.remove(ACTIVE_CLASS);\n            }\n        });\n    });\n})();\n","(() => {\n    const TOOLTIP_LEFT_CLASS = 'tooltip_left';\n    const TOOLTIP_BOTTOM_CLASS = 'tooltip_bottom';\n\n    document.addEventListener('DOMContentLoaded', function () {\n        window.addEventListener('resize', initTooltip);\n        initTooltip();\n    });\n\n    function initTooltip() {\n        const triggers = document.querySelectorAll('.js-tooltip-trigger');\n\n        triggers?.forEach((trigger) => {\n            const tooltip = trigger.querySelector('.js-tooltip');\n\n            if (tooltip) {\n                adjustTooltipPosition(trigger, tooltip);\n            }\n        });\n    }\n\n    function adjustTooltipPosition(trigger, tooltip) {\n        tooltip.classList.remove(TOOLTIP_LEFT_CLASS);\n        tooltip.classList.remove(TOOLTIP_BOTTOM_CLASS);\n\n        const viewportWidth = window.innerWidth;\n        const viewportHeight = window.innerHeight;\n        const tooltipRect = tooltip.getBoundingClientRect();\n\n        const tooltipRightPointX = tooltipRect.left + tooltipRect.width;\n        const tooltipTopPointY = tooltipRect.top;\n\n        if (tooltipRightPointX > viewportWidth) {\n            tooltip.classList.add(TOOLTIP_LEFT_CLASS);\n        }\n\n        if (tooltipTopPointY < 0) {\n            tooltip.classList.add(TOOLTIP_BOTTOM_CLASS);\n        }\n    }\n})();\n"]}